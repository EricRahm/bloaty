# Test that we ignore invalid ranges where high_pc < low_pc.
#
# RUN: %yaml2obj %s -o %t.o
# RUN: %bloaty %t.o -d compileunits --raw-map --domain=vm | %FileCheck %s

--- !ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  Type:            ET_EXEC
  Machine:         EM_X86_64
ProgramHeaders:
  - Type:            PT_LOAD
    Flags:           [ PF_X, PF_R ]
    FirstSec:        .text
    LastSec:         .text
    VAddr:           0x1000
    Align:           0x1000
Sections:
  - Name:            .text
    Type:            SHT_PROGBITS
    Flags:           [ SHF_ALLOC, SHF_EXECINSTR ]
    Address:         0x1000
    Size:            0x30
DWARF:
  debug_str:
    - invalid.c
  debug_abbrev:
    - ID:              0
      Table:
        - Code:            0x1
          Tag:             DW_TAG_compile_unit
          Children:        DW_CHILDREN_yes
          Attributes:
            - Attribute:       DW_AT_name
              Form:            DW_FORM_strp
        - Code:            0x2
          Tag:             DW_TAG_subprogram
          Children:        DW_CHILDREN_no
          Attributes:
            - Attribute:       DW_AT_low_pc
              Form:            DW_FORM_addr
            - Attribute:       DW_AT_high_pc
              Form:            DW_FORM_addr
  debug_info:
    # Invalid CU (high_pc < low_pc)
    - Version:         4
      AbbrevTableID:   0
      AddrSize:        8
      Entries:
        - AbbrCode:        0x1
          Values:
            - Value:           0x0  # offset into debug_str for "invalid.c"
        - AbbrCode:        0x2
          Values:
            - Value:           0x1010  # low_pc
            - Value:           0x1000  # high_pc (INVALID: less than low_pc)
        - AbbrCode:        0x0
...

# CHECK: VM MAP:
# CHECK: 0000-1000              4096             [-- Nothing mapped --]
# CHECK: 1000-1030                48             [section .text]
